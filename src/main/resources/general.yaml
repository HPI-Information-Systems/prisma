# default separator used in CSV data files
defaultSeparator: ","
# default separator between two table names
defaultTablePairSeparator: "___"
# default directory name of source database
defaultSourceDatabaseDir: "source"
# default directory name of target database
defaultTargetDatabaseDir: "target"
# default directory name of ground truth matches
defaultGroundTruthDir: "ground_truth"
# directory name for results
resultsDir: "results"
# directory name for performance results
performanceDir: "performances"
# file name suffixes for matchstep performances (<MatchStep>suffix)
performanceMatchStepOverviewFileSuffix: "_performance_overview.csv"
performanceMatchStepSummaryFileSuffix: "_performance_summary.csv"
# file name suffixes for scenario performance (<Scenario>suffix)
performanceScenarioSummaryFileSuffix: "_performance_summary.csv"
# file name suffixes for dataset performance (<Dataset>suffix)
performanceDatasetSummaryFileSuffix: "_performance_summary.csv"
# file name for overall performance summary file
performanceOverallSummaryFile: "overall_performance.csv"
# directory name for matcher output results
outputDir : "outputs"
# default base directory where data directories reside
defaultDatasetBasePath: "data"

# Step 1: generate candidate table pairs to match
# FIXME: saving and evaluating output for table pair generation not yet implemented
saveOutputTablePairGeneration: False
evaluateTablePairGeneration: False
# Step 2: run first line matchers (i.e., matchers that use table data to match)
saveOutputFirstLineMatchers: False
evaluateFirstLineMatchers: True
# Step 3: run similarity matrix boosting on the output of first line matchers
runSimMatrixBoostingOnFirstLineMatchers: True
saveOutputSimMatrixBoostingOnFirstLineMatchers: False
evaluateSimMatrixBoostingOnFirstLineMatchers: True
# Step 4: run second line matchers (ensemble matchers and other matchers using output of first line matchers)
runSecondLineMatchers: True
saveOutputSecondLineMatchers: False
evaluateSecondLineMatchers: True
# Step 5: run similarity matrix boosting on the output of second line matchers
runSimMatrixBoostingOnSecondLineMatchers: True
saveOutputSimMatrixBoostingOnSecondLineMatchers: False
evaluateSimMatrixBoostingOnSecondLineMatchers: True

# FIXME: do not set this parameter in this file, it is set to true whenever runSimMatrixBoosting is set to true
# FIXME: eventually, dependencies should be read on demand
# flag indicating whether to read functional and inclusion dependencies and unique column combinations from metadata folder in scenarios
# readDependencies: True